{"version":3,"file":"static/js/758.f0f3f9e4.chunk.js","mappings":"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","sources":["animation.styled.js","components/Button/Button.js","components/Button/Button.styled.js","components/Container/Container.jsx","components/Backdrop/Backdrop.styled.js","components/Backdrop/Backdrop.js","components/ModalWindow/ModalWindow.styled.js","components/ModalWindow/ModalWindow.js","utils/links.js","components/NetworksList/NetworksList.js","components/TablePrice/TablePrice.styled.js","components/TablePrice/TablePrice.js","pages/PricePage/PricePage.js"],"sourcesContent":["import { keyframes } from '@emotion/react';\r\n\r\nexport const slideMenu = keyframes`\r\n    0% {\r\n        transform: translateX(-100%);\r\n    }\r\n    100% {\r\n        transform: translateX(0);\r\n    }\r\n`;\r\n\r\nexport const slideModal = keyframes`\r\n    0% {\r\n        transform: rotateX(90deg); \r\n        opacity: 0; \r\n    }\r\n    100% {\r\n        transform: rotateX(0); \r\n        opacity: 1;\r\n    }\r\n`;","import React from 'react';\r\nimport { StyledButton } from './Button.styled';\r\n\r\nconst Button = ({ children, onClick, small, className }) => {\r\n    return (\r\n        <StyledButton\r\n            onClick={onClick}\r\n            small={small}\r\n            type='button'\r\n            className={className}\r\n        >\r\n            {children}\r\n        </StyledButton>\r\n    );\r\n};\r\n\r\nexport default Button;","import styled from '@emotion/styled';\r\n\r\nexport const StyledButton = styled.button`\r\n    background-color: var(--bc-hero);\r\n    color: var(--color-main-text);\r\n    border: 1.5px solid var(--color-main-text);\r\n    border-radius: var(--card-border-radius);\r\n    box-shadow: var(--shadow-cards-second), var(--shadow-card-inset);\r\n    font-weight: 500;\r\n    letter-spacing: 0em;\r\n    font-size: ${(props) => (props.small ? '14px' : '16px')};\r\n    line-height: 18px;\r\n    padding: ${(props) => (props.small ? '10px 24px' : '12px 40px')} ;\r\n    overflow: hidden;\r\n    white-space: nowrap;\r\n\r\n    transition: color linear 500ms, border-color linear 500ms;\r\n\r\n    @media (min-width: 768px) {\r\n        color: var(--bc-hero);\r\n        border-color: var(--bc-hero);\r\n        background-color: var(--color-brown);\r\n\r\n        transition: color linear 500ms,\r\n        border-color linear 500ms,\r\n        background-color linear 500ms;\r\n\r\n        &:hover {\r\n            color: var(--color-brown);\r\n            border-color: var(--color-brown);\r\n            background-color: var(--bc-hero);\r\n        }\r\n\r\n    @media screen and (min-width: 1440px) {\r\n        font-size: ${(props) => (props.small ? '14px' : '18px')};\r\n    }\r\n    }\r\n`;\r\n\r\nexport const ButtonNavigate = styled.button`\r\n    width: 100%;\r\n    padding: 4px 2px;\r\n    font-weight: 500;\r\n    color: var(--color-brown);\r\n    font-size: 9px;\r\n\r\n    letter-spacing: 0em;\r\n    overflow: hidden;\r\n    background-color: #d6cfc781;\r\n    border: 1px solid var(--color-brown);\r\n    border-radius: 4px;\r\n    \r\n    display: flex;\r\n    align-items: center;\r\n\r\n    position: absolute;\r\n    z-index: 100;\r\n\r\n    transition: color linear 500ms,\r\n        border-color linear 500ms,\r\n        background-color linear 500ms;\r\n    &:hover {\r\n            color: var(--color-brown);\r\n            border-color: var(--color-brown);\r\n            background-color: var(--bc-hero);\r\n        }\r\n\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 12px;\r\n        text-transform: uppercase; \r\n        padding: 10px 20px;\r\n        gap: 10px;\r\n        border: 1.5px solid var(--color-brown);\r\n    }\r\n    @media screen and (min-width: 1440px) {\r\n        font-size: 14px;\r\n    }\r\n\r\n    svg {\r\n        font-size: 28px;\r\n        color: #c3580b;\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 22px;\r\n    }\r\n    }\r\n\r\n`;","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  width: 100%;\r\n  min-width: 320px;\r\n  padding-left: 20px;\r\n  padding-right: 20px;\r\n  margin: 0 auto;\r\n  overflow-x: hidden;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    max-width: 768px;\r\n    padding-left: 32px;\r\n    padding-right: 32px;\r\n  }\r\n\r\n  @media screen and (min-width: 1440px) {\r\n    max-width: 1440px;\r\n    padding-left: 96px;\r\n    padding-right: 96px;\r\n  }\r\n`;\r\n\r\nexport default Container;\r\n\r\n\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ModalOverlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n  z-index: 1000;\r\n  overflow-y: auto;\r\n`;","import { useEffect, useRef } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport { ModalOverlay } from './Backdrop.styled';\r\n\r\nconst Backdrop = ({ closeModal, children }) => {\r\n    const modalRoot = useRef(document.querySelector('#modal-root'));\r\n\r\n    useEffect(() => {\r\n        const handleKeyDown = (evt) => {\r\n            if (evt.code === 'Escape' && closeModal) {\r\n                closeModal();\r\n            }\r\n        };\r\n\r\n        document.addEventListener('keydown', handleKeyDown);\r\n        return () => {\r\n            document.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [closeModal]);\r\n\r\n    useEffect(() => {\r\n        document.body.style.overflow = 'hidden';\r\n        return () => {\r\n            document.body.style.overflow = '';\r\n        };\r\n    }, []);\r\n\r\n    return createPortal(\r\n        <ModalOverlay\r\n            onClick={(e) => {\r\n                if (e.target === e.currentTarget && closeModal) {\r\n                    closeModal();\r\n                }\r\n            }}\r\n        >\r\n            {children}\r\n        </ModalOverlay>,\r\n        modalRoot.current\r\n    );\r\n};\r\n\r\nexport default Backdrop;\r\n","import styled from '@emotion/styled';\r\nimport { TfiClose } from \"react-icons/tfi\";\r\nimport { slideModal } from '../../animation.styled';\r\n\r\nexport const WindowStyle = styled.div`\r\n    max-width: 100%;\r\n    width: 280px;\r\n    max-height: 500px;\r\n    z-index: 200;\r\n    position: absolute;\r\n    top: 160px;\r\n    border-radius: 12px;\r\n    border: 1px solid var(--color-brown);\r\n    background-color: var(--bc-header);\r\n    color: var(--color-main-text);\r\n    padding: 30px 18px;\r\n\r\n    animation: ${slideModal} 0.5s ease-in-out;\r\n\r\n\r\n    @media screen and (min-width: 400px) {\r\n        width: 350px;\r\n    }\r\n    @media screen and (min-width: 768px) {\r\n        max-height: 600px;\r\n        width: 500px;\r\n        padding: 30px;\r\n        top: 110px;\r\n    }\r\n    @media screen and (min-width: 1440px) {\r\n        max-height: 700px;\r\n        width: 500px;\r\n        top: 180px;\r\n        padding: 40px 30px;\r\n    }\r\n`;\r\n\r\nexport const CloseButton = styled.button`\r\n    position: absolute;\r\n    top: 16px;\r\n    right: 10px;\r\n    background: none;\r\n    border: none;\r\n    cursor: pointer;\r\n    @media screen and (min-width: 768px) {\r\n        top: 26px;\r\n        right: 32px;\r\n    }\r\n    p {\r\n        color:  var(--color-black);\r\n    }\r\n`;\r\n\r\n// svg close button mob menu\r\nexport const CloseIconStyled = styled(TfiClose)`\r\n    margin-left: auto;\r\n    font-size: 20px;\r\n    fill: var(--color-main-text);\r\n`;\r\n//-------------------------\r\n\r\nexport const ModalTitle = styled.h2`\r\n    text-align: center;\r\n    transform: uppercase;\r\n    font-size: 16px;\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 20px;\r\n    }\r\n`;\r\n\r\nexport const Text = styled.h3`\r\n    text-align: center;\r\n    margin: 12px 0;\r\n    font-size: 14px;\r\n    line-height: 1.2;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 16px;\r\n    @media screen and (min-width: 768px) {\r\n        font-size: 18px;\r\n        margin: 15px 0;\r\n    }\r\n    @media screen and (min-width: 1440px) {\r\n        margin: 20px 0;\r\n    }\r\n    p {\r\n        display: flex; \r\n        align-items: center;\r\n        justify-content: center;\r\n        gap: 8px;\r\n        svg {\r\n            font-size: 18px;\r\n            @media screen and (min-width: 768px) {\r\n                font-size: 25px;\r\n            }\r\n        }\r\n    }\r\n    a {\r\n        color: var(--color-black);\r\n        transition: transform 0.5s ease;\r\n        transform: scale(1);\r\n        &:hover, &:focus {\r\n            transform: scale(1.1); \r\n        }\r\n    }\r\n`;\r\n\r\nexport const ModalContent = styled.div`\r\n`;\r\n\r\nexport const NetworksWrapp = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    gap: 16px;\r\n    @media screen and (min-width: 768px) {\r\n        gap: 30px;\r\n    }\r\n    a {\r\n        font-size: 18px;\r\n        display: flex;\r\n        align-items: center;\r\n        justify-content: center;\r\n    }\r\n    img {\r\n        transition: transform 0.3s ease; \r\n    }\r\n    svg {\r\n        font-size: 40px;\r\n        color: var(--color-black);\r\n        transition: transform 0.5s ease; \r\n    }\r\n    a:hover svg, a:focus svg {\r\n        transform: scale(1.1); \r\n    }\r\n    a:hover img, a:focus img {\r\n        transform: scale(1.1); \r\n    }\r\n`;","import React, { useState } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport Backdrop from '../Backdrop/Backdrop';\r\nimport { NetworksWrapp, Text, CloseButton, CloseIconStyled, WindowStyle, ModalTitle, ModalContent } from './ModalWindow.styled';\r\nimport NetworksList from '../NetworksList/NetworksList';\r\nimport { MdPhoneIphone } from \"react-icons/md\";\r\nimport { MdOutlineEmail } from \"react-icons/md\"; import { FaLink } from \"react-icons/fa6\";\r\nimport dataContakt from '../../resources/dataContacts.json';\r\n\r\nconst ModalWindow = ({ toggleShowMenu }) => {\r\n    const [isCloseModal, setIsCloseModal] = useState(false);\r\n\r\n    const handleCloseModal = () => {\r\n        setIsCloseModal(!isCloseModal);\r\n        toggleShowMenu();\r\n    };\r\n\r\n    return createPortal(\r\n        <Backdrop closeModal={toggleShowMenu}>\r\n            <WindowStyle>\r\n                <CloseButton onClick={handleCloseModal}>\r\n                    <CloseIconStyled />\r\n                </CloseButton>\r\n                <>\r\n                    <ModalTitle style={{ textTransform: 'uppercase' }}>Umów się na wizytę</ModalTitle>\r\n                    <Text>Skontaktuj się z nami, aby umówić wizytę:</Text>\r\n\r\n                    <ModalContent>\r\n                        <Text><p><MdPhoneIphone />Zadzwoń do nas:</p><a href={`tel:${dataContakt.phoneToCall}`}>{dataContakt.phoneToShow}</a></Text>\r\n                        <Text><p><MdOutlineEmail />Wyślij e-mail:</p> <a href={`mailto:${dataContakt.email}`}>{dataContakt.email}</a></Text>\r\n\r\n                        <Text><p><FaLink />Znajdź nas na:</p></Text>\r\n                        <NetworksWrapp>\r\n                            <NetworksList />\r\n                        </NetworksWrapp>\r\n                        <Text style={{ marginBottom: '0' }}>Zapraszamy do kontaktu!</Text>\r\n                    </ModalContent>\r\n                </>\r\n            </WindowStyle>\r\n        </Backdrop>,\r\n        document.querySelector('#modal-root')\r\n    );\r\n};\r\n\r\nexport default ModalWindow;\r\n","import { BsInstagram } from \"react-icons/bs\";\r\nimport { FaFacebookSquare } from \"react-icons/fa\";\r\nimport iconBooksy from '../images/BooksyIcon.png';\r\n\r\nexport const socialNetworks = [\r\n    {\r\n        name: 'Instagram',\r\n        link: 'https://www.instagram.com/epilacja.slupsk/',\r\n        icon: <BsInstagram />,\r\n    },\r\n    {\r\n        name: 'Facebook',\r\n        link: 'https://www.facebook.com/epilacja.slupsk/',\r\n        icon: <FaFacebookSquare />,\r\n    },\r\n    {\r\n        name: 'Booksy',\r\n        link: 'https://booksy.com/pl-pl/119440_epilacja-slupsk_depilacja_20103_slupsk',\r\n        icon: <img src={iconBooksy} alt=\"Booksy Icon\" width={120} />,\r\n    }\r\n];","import React from 'react';\r\nimport { socialNetworks } from '../../utils/links';\r\n\r\nconst NetworksList = () => {\r\n    return (\r\n        <>\r\n            {socialNetworks.map(({ name, link, icon }, index) => (\r\n                <a\r\n                    key={index}\r\n                    href={link}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    aria-label={name}\r\n                >\r\n                    {icon}\r\n                </a>\r\n            ))}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default NetworksList;","import styled from '@emotion/styled';\r\n\r\nexport const Wrapper = styled.div`\r\n    padding-top: 30px;\r\n    padding-bottom: 30px;\r\n    @media screen and (min-width: 768px) {\r\n        padding-top: 60px;\r\n        padding-bottom: 60px;\r\n    }\r\n`;\r\n\r\nexport const TableWrapp = styled.div`\r\n    h2 {\r\n        color: var(--color-dark);\r\n        font-size: 16px;\r\n        background-color: var(--bc-hero);\r\n        @media screen and (min-width: 768px) {\r\n            font-size: 24px;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const TableStyled = styled.table`\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n    position: relative;\r\n    margin-bottom: 44px;\r\n\r\n    th, td {\r\n        color: var(--color-brown);\r\n        border-bottom: 1px solid #e0e0e0; \r\n        padding: 5px; \r\n        text-align: left;\r\n        font-size: 12px;\r\n        line-height: 1.4;\r\n        text-align: center;\r\n        @media screen and (min-width: 768px) {\r\n            font-size: 16px;\r\n            padding: 8px; \r\n        }\r\n    }\r\n\r\n    th:first-of-type {\r\n        text-align: left;\r\n    }\r\n    td:first-of-type {\r\n        width: 600px;\r\n        text-align: left;\r\n    }\r\n    td:not(:first-of-type) {\r\n        width: 60px;\r\n    }\r\n\r\n    .discount {\r\n        color: var(--color-red);\r\n    }\r\n`;\r\n\r\nexport const ButtonBox = styled.span`\r\n    position: absolute;\r\n    bottom: -42px;\r\n    right: 0;\r\n`;\r\n\r\nexport const Span = styled.span`\r\n        display: flex;\r\n        align-items: center; \r\n        gap: 2px;\r\n\r\n        svg{\r\n            font-size: 20px;\r\n            color: var(--color-main-text);\r\n        }\r\n`;","import React, { useEffect, useState } from 'react';\r\nimport Container from '../Container/Container';\r\nimport { Wrapper, TableWrapp, TableStyled, ButtonBox, Span } from './TablePrice.styled';\r\nimport { GiSandsOfTime } from \"react-icons/gi\";\r\nimport { GiMoneyStack } from \"react-icons/gi\";\r\nimport { PiSealPercentThin } from \"react-icons/pi\";\r\nimport dataServices from '../../resources/dataServices.json'\r\nimport ModalWindow from '../ModalWindow/ModalWindow';\r\nimport Button from '../Button/Button';\r\n\r\nconst TablePrice = () => {\r\n\r\n    const [isShowModal, setIsShowModal] = useState(false);\r\n\r\n    const handleButton = () => setIsShowModal(!isShowModal);\r\n\r\n    const handleKeyDown = (event) => {\r\n        if (event.key === 'Escape') {\r\n            setIsShowModal(false);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        if (isShowModal) {\r\n            window.addEventListener('keydown', handleKeyDown);\r\n        } else {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        }\r\n        return () => {\r\n            window.removeEventListener('keydown', handleKeyDown);\r\n        };\r\n    }, [isShowModal]);\r\n\r\n\r\n    return (\r\n        <>\r\n            <div id=\"back-to-top-anchor\"></div>\r\n            <Container>\r\n                <Wrapper>\r\n                    {dataServices.map((category, categoryIndex) => (\r\n                        <TableWrapp key={categoryIndex}>\r\n                            <h2>{category.name}</h2>\r\n                            <TableStyled>\r\n                                <thead>\r\n                                    <tr key={categoryIndex}>\r\n                                        <th>Zabieg</th>\r\n                                        <th><Span><GiSandsOfTime /> Czas trwania</Span></th>\r\n                                        <th><Span><GiMoneyStack /> Cena</Span></th>\r\n                                        {category.services.some(service => service.discount) && (\r\n                                            <th key=\"promocja\"><Span><PiSealPercentThin /> Promocja</Span></th>\r\n                                        )}\r\n                                        <th style={{ width: '0.1px' }}></th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {category.services.map((service, serviceIndex) => (\r\n                                        <tr key={serviceIndex}>\r\n                                            <td>{service.name}</td>\r\n                                            <td>{service.duration}</td>\r\n                                            <td>{service.price}</td>\r\n                                            {service.discount && (\r\n                                                <td key={`discount-${serviceIndex}`} className='discount'>{service.discount}</td>)}\r\n                                            {/* ) : (<td>-</td>) */}\r\n\r\n                                            <td style={{ width: '1px' }}>\r\n                                                <ButtonBox>\r\n                                                    <Button small={true} onClick={handleButton}>UMÓW SIĘ</Button>\r\n                                                </ButtonBox>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </TableStyled>\r\n                        </TableWrapp>\r\n                    ))}\r\n                    {isShowModal && <ModalWindow toggleShowMenu={handleButton} />}\r\n                </Wrapper>\r\n            </Container>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default TablePrice;","import React from 'react'\r\nimport TablePrice from '../../components/TablePrice/TablePrice';\r\n\r\nconst PricePage = () => {\r\n    return (\r\n        <>\r\n            <TablePrice />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PricePage;"],"names":["slideMenu","keyframes","slideModal","_ref","children","onClick","small","className","_jsx","StyledButton","type","styled","button","props","ButtonNavigate","div","ModalOverlay","closeModal","modalRoot","useRef","document","querySelector","useEffect","handleKeyDown","evt","code","addEventListener","removeEventListener","body","style","overflow","createPortal","e","target","currentTarget","current","WindowStyle","CloseButton","CloseIconStyled","TfiClose","ModalTitle","h2","Text","h3","ModalContent","NetworksWrapp","toggleShowMenu","isCloseModal","setIsCloseModal","useState","Backdrop","_jsxs","handleCloseModal","_Fragment","textTransform","MdPhoneIphone","href","dataContakt","MdOutlineEmail","FaLink","NetworksList","marginBottom","socialNetworks","name","link","icon","BsInstagram","FaFacebookSquare","src","iconBooksy","alt","width","map","index","rel","Wrapper","TableWrapp","TableStyled","table","ButtonBox","span","Span","TablePrice","isShowModal","setIsShowModal","handleButton","event","key","window","id","Container","dataServices","category","categoryIndex","GiSandsOfTime","GiMoneyStack","services","some","service","discount","PiSealPercentThin","serviceIndex","duration","price","Button","ModalWindow","PricePage"],"sourceRoot":""}